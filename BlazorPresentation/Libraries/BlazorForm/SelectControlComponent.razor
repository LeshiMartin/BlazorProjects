@inherits BaseControlComponent


@if ( !Searchable )
{
	@if ( !IsMulti )
	{

		<LegacySelectComponent Appereance="@Appereance"
											 Items="@Items"
											 TextControl="@TextControl"></LegacySelectComponent>
	}
	else
	{
		<MultipleSelectComponent Appereance="@Appereance"
												 Items="@Items"
												 Template="@Template"
												 TextControl="@TextControl"></MultipleSelectComponent>
	}
}
else
{

	if ( !IsMulti )
	{

		<SearchableSelectComponent Appereance="@Appereance"
													 Items="@Items"
													 Template="@Template"
													 TextControl="@TextControl"></SearchableSelectComponent>
	}
	else
	{
		<MultipleSelectComponent Appereance="@Appereance"
												 Items="@Items"
												 Template="@Template"
												 TextControl="@TextControl"></MultipleSelectComponent>
	}



}
@code {
	public string Id { get; } = Guid.NewGuid ().ToString ().Substring (6);
	public string Label { get; set; } = "Select...";
	[Parameter]
	public bool Searchable { get; set; } = false;

	[Parameter]
	public ICollection<ISelectItem> Items { get; set; } = new HashSet<ISelectItem> ();
	[Parameter]
	public RenderFragment<ISelectItem>? Template { get; set; }

	[Parameter]
	public bool IsMulti { get; set; } = false;

	public TextControl? TextControl { get; set; }

	protected override void OnInitialized ()
	{
		if(!ControlIsValid())
			throw new ArgumentException ("Control is not valid");
		TextControl = (AbstractControl ?? FormGroup!.Controls[FormControlName!]) as TextControl;
		base.OnInitialized ();
	}
}
